/* <div className= {
    classes["window-wrapper"]
}

><div className= {
    classes["photo-wrapper"]
}

><img src= {
    `data: image/png;
    image/jpeg;
    base64, `+props.photoPage.detailedPhotoView.thumbnail
}

/></div><div className= {
    classes["download-wrapper"]
}

><div className= {
    classes["onemoredown-wrapper"]
}

> {
    /* <a onClick={() => { props.getFullPhoto(props.photoPage.detailedPhotoView.photo, props.photoPage.detailedPhotoView.thumbnail, aDownloadRef) }} className={`nav-button ${classes["download-button"]}`}>
                                Download
                                    <div>
                                    <a ref={aDownloadRef} download={GetRandomName()}></a>
                                </div>
                            </a> */

/* </div></div></div> */

.block {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row-reverse;
    /* justify-content: center; */
}

.group {
    width: 25em;
    height: 25em;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.media {
    flex: 3;
    display: flex;
    align-items: center;
    justify-content: center;
    max-height: 100%;
    max-width: 100%;
    padding: 10px;
}

.media img {
    align-self: center;
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
}

.download {
    flex: 1;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-end;
}

.download button {
    padding: 10px;
    text-decoration: none;
    text-align: center;
    /* width: 100px; */
    height: 50%;
    margin-right: 1.5em;
    margin-bottom: -1em
}

.download button:hover {
    text-decoration: none;
}

.close-button {
    position: absolute;
    height: 30px;
    width: 30px;
    margin-right: 5px;
    transition: .4s all;
}

.close-button:hover {
    transform: rotate(180deg);
}